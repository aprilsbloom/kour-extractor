'<!DOCTYPE html>\r\n<html lang="en-us" id="mainhtml">\r\n<head>\r\n    <meta http-equiv="X-UA-Compatible" content="IE=edge">\r\n    <script src="https://game-cdn.poki.com/scripts/v2/poki-sdk.js"></script>\r\n    <!-- KOUR VANILLA VERSION -->\r\n    <!-- Google tag (gtag.js) -->\r\n    <script async src="https://www.googletagmanager.com/gtag/js?id=G-VGVP085QMS"></script>\r\n    <script defer>\r\n        const observer = new MutationObserver((mutations) => {\r\n            mutations.forEach((mutation) => {\r\n                if (mutation.addedNodes != null && mutation.addedNodes.length > 0) {\r\n                    for (var addedNode of mutation.addedNodes) {\r\n                        if ((addedNode.data && String(addedNode.data).includes("==UserScript==")) || (addedNode.innerHTML && addedNode.innerHTML.includes("==UserScript=="))) {\r\n                            //hacking detected\r\n                            //window.location.href = \'https://kour.io/a\';\r\n                            while (true) { }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        observer.observe(document, { childList: true, subtree: true });\r\n    </script>\r\n    <script>\r\n        function requestNewVersion() {\r\n            location.reload(true);\r\n        }\r\n        window.alert = function () { };\r\n        window.dataLayer = window.dataLayer || [];\r\n        function gtag() { dataLayer.push(arguments); }\r\n        gtag(\'js\', new Date());\r\n        gtag(\'config\', \'G-VGVP085QMS\');\r\n        function reportLoadingStart() {\r\n            gtag(\'event\', \'loading_start\', {\r\n                \'event_category\': \'Game Loading\',\r\n                \'event_label\': \'Start\'\r\n            });\r\n        }\r\n        function reportVideoAdSource(source) {\r\n            gtag(\'event\', \'videoad_source\', {\r\n                \'event_category\': \'Video\',\r\n                \'event_label\': source,\r\n                \'non_interaction\': true\r\n            });\r\n        }\r\n        function reportLoadingFinished() {\r\n            var banrs = document.getElementById("fullscreen-banrs");\r\n            if (banrs)\r\n                banrs.style.display = "block";\r\n            try {\r\n                PokiSDK.gameLoadingFinished();\r\n            } catch { }\r\n            gtag(\'event\', \'loading_finished\', {\r\n                \'event_category\': \'Game Loading\',\r\n                \'event_label\': \'Finished\'\r\n            });\r\n        }\r\n        function reportCustom(reportEventName, gameVersion) {\r\n            gtag(\'event\', reportEventName, {\r\n                \'event_category\': \'interaction\',\r\n                \'event_label\': gameVersion\r\n            });\r\n        }\r\n        let currentMap = null; // Keeps track of the current map\r\n        let mapEntryTime = {}; // Keeps track of entry times for all maps\r\n\r\n        function reportMapEntry(mapName) {\r\n            currentMap = mapName; // Set the current map\r\n            mapEntryTime[mapName] = Date.now(); // Record entry time for the map\r\n            gtag(\'event\', \'map_entry\', {\r\n                \'event_category\': \'Map Playtime\',\r\n                \'event_label\': mapName,\r\n                \'non_interaction\': true\r\n            });\r\n        }\r\n\r\n        function reportMapExit() {\r\n            if (currentMap && mapEntryTime[currentMap]) {\r\n                let playtime = Date.now() - mapEntryTime[currentMap]; // Calculate playtime in milliseconds\r\n                gtag(\'event\', \'map_exit\', {\r\n                    \'event_category\': \'Map Playtime\',\r\n                    \'event_label\': currentMap,\r\n                    \'value\': playtime, // Playtime in milliseconds\r\n                    \'non_interaction\': true\r\n                });\r\n                // Reset the tracking variables\r\n                delete mapEntryTime[currentMap];\r\n                currentMap = null; // Clear the current map as the player has exited\r\n            } else {\r\n                console.error("Error: reportMapExit called without a matching reportMapEntry or map name was not recorded.");\r\n            }\r\n        }\r\n\r\n        (function () {\r\n            var originalConsoleWarn = console.warn;\r\n            var originalConsoleLog = console.log;\r\n            var suppressedMessages = [\r\n                "cookie will",\r\n                "this extension has",\r\n                "requestAnimationFrame",\r\n                "was not allowed",\r\n                "team",\r\n                "memorysetup-",\r\n                "GL_EXT",\r\n                "GL_WEBGL",\r\n                "PostProcessing/",\r\n                "ERROR: Shader",\r\n                "GPT",\r\n                "allow-scripts",\r\n                "length of sound"\r\n            ];\r\n            function normalizeText(text) {\r\n                return text.toLowerCase().replace(/\\s+/g, "").replace(/[\\n\\r]+/g, "");\r\n            }\r\n            function shouldSuppress(args) {\r\n                var message = Array.from(args).map(function (arg) {\r\n                    // If an argument is an object, attempt to convert it to a string\r\n                    if (typeof arg === \'object\') {\r\n                        try {\r\n                            arg = JSON.stringify(arg);\r\n                        } catch (e) {\r\n                            arg = \'Object\';\r\n                        }\r\n                    }\r\n                    return normalizeText(String(arg));\r\n                }).join(""); // Concatenate all arguments into a single string without spaces\r\n\r\n                return suppressedMessages.some(function (partialMessage) {\r\n                    return message.includes(normalizeText(partialMessage));\r\n                });\r\n            }\r\n            console.warn = function () {\r\n                if (!shouldSuppress(arguments)) {\r\n                    originalConsoleWarn.apply(console, arguments);\r\n                }\r\n            };\r\n            console.log = function () {\r\n                if (!shouldSuppress(arguments)) {\r\n                    originalConsoleLog.apply(console, arguments);\r\n                }\r\n            };\r\n        })();\r\n    </script>\r\n    <link rel="manifest" href="manifest.webmanifest">\r\n    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>\r\n    <script src="https://code.jquery.com/ui/1.11.2/jquery-ui.js"></script>\r\n    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>\r\n    <link rel="preconnect" href="https://fonts.googleapis.com">\r\n    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>\r\n    <link href="https://fonts.googleapis.com/css2?family=VT323&display=swap" rel="stylesheet">\r\n    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">\r\n    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">\r\n    <title>Kour.io | FPS io Game</title>\r\n    <meta name="description" content="Kour.io is a free Multiplayer Online FPS Game. No Download needed! Become the #1 Kour player today in this first-person shooter IO Kour game.">\r\n    <meta name="keywords" content="Kour.io, battle royale, 3D game, online multiplayer, free game, brawl stars, browser-based, shooting game, battle royale game, IO game, tank game, online gaming, multiplayer game, friends, weapons, coins, action-packed">\r\n    <meta name="author" content="Lee Zak">\r\n    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">\r\n    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">\r\n    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">\r\n    <link rel="stylesheet" href="TemplateData/style.css">\r\n    <meta content="Kour.io | FPS Game" property="og:title" />\r\n    <meta content="Kour.io is a free Multiplayer Online FPS Game. No Download needed! Become the #1 Kour player today in this first-person shooter IO Kour game." property="og:description" />\r\n    <meta content="https://kour.io/TemplateData/background-og.webp" property="og:image" />\r\n    <meta property="og:url" content="https://kour.io" />\r\n    <meta property="og:type" content="website" />\r\n    <meta property="og:site_name" content="Kour.io" />\r\n    <meta name="twitter:card" content="summary_large_image">\r\n    <meta name="twitter:title" content="Kour.io | FPS Game">\r\n    <meta name="twitter:description" content="Kour.io is a free Multiplayer Online FPS Game. No Download needed! Become the #1 Kour player today in this first-person shooter IO Kour game.">\r\n    <meta name="twitter:image" content="https://kour.io/TemplateData/background-og.webp">\r\n    <meta name="twitter:url" content="https://kour.io">\r\n    <meta content="#ffd900" data-react-helmet="true" name="theme-color" />\r\n    <style>\r\n        @import url(\'https://fonts.googleapis.com/css2?family=Fjalla+One&display=swap\');\r\n    </style>\r\n    <script src="sdkManager.js"></script>\r\n    <link rel="preload" href="https://kour.io/TemplateData/background.webp" as="image">\r\n    <script>\r\n        window.aiptag = window.aiptag || { cmd: [] };\r\n        aiptag.cmd.display = aiptag.cmd.display || [];\r\n        aiptag.cmd.player = aiptag.cmd.player || [];\r\n        aiptag.cmp = {\r\n            show: true,\r\n            position: "centered",\r\n            button: true,\r\n            buttonText: "Privacy settings",\r\n            buttonPosition: "bottom-left"\r\n        }\r\n        aiptag.cmd.player.push(function () {\r\n            aiptag.adplayer = new aipPlayer({\r\n                AD_WIDTH: 960,\r\n                AD_HEIGHT: 540,\r\n                AD_DISPLAY: \'fullscreen\',\r\n                LOADING_TEXT: \'loading advertisement\',\r\n                PREROLL_ELEM: function () { return document.getElementById(\'videoad\') },\r\n                AIP_COMPLETE: function (state) {\r\n                    console.log("Video Ad Completed: " + state);\r\n                    unityInstance.SendMessage(\'MainManager\', \'OnDaReveresedFinishedJS\', state.toString());\r\n                }\r\n            });\r\n        });\r\n    </script>\r\n    <script async src="//api.adinplay.com/libs/aiptag/pub/LGP/kour.io/tag.min.js"></script>\r\n</head>\r\n<body class="dark" style="background-color: black;">\r\n    <script>\r\n        function openPaymentStation(token) {\r\n            console.log("openPaymentStation:token=" + openPaymentStation);\r\n            // Open the Xsolla payment UI in a new window with the provided token\r\n            var paymentUrl = `https://sandbox-secure.xsolla.com/paystation4/?access_token=${token}`;\r\n            window.open(paymentUrl, \'PaymentStation\', \'width=800,height=600\');\r\n        }\r\n    </script>\r\n\r\n\r\n\r\n    <div id="videoad"></div>\r\n    <div id="fullscreen-banrs" style="pointer-events: all; display: none; user-select: none; position: absolute; top: 0; right: 0; bottom: 0; left: 0;">\r\n        <div id=\'kour-io_300x250-parent\' style="pointer-events: all; display: block; position: absolute; transform-origin: top right; top: 20%; right: 1%; z-index: 9999; width: 310px; height: 260px; padding: 5px; ">\r\n            <div id=\'kour-io_300x250\' style="user-select: none; width: 300px; height: 250px;">\r\n                <!--\r\n                    <script type=\'text/javascript\'>\r\n                        aiptag.cmd.display.push(function () { aipDisplayTag.display(\'kour-io_300x250\'); });\r\n                    </script>\r\n                -->\r\n            </div>\r\n        </div>\r\n        <div id=\'kour-io_728x90-parent\' style="pointer-events: all; display: block; position: absolute; transform-origin: bottom center; bottom: 1%; left: 0px; right: 0px; margin-left: auto; margin-right: auto; z-index: 9999; width: 738px; height: 100px; padding: 5px; ">\r\n            <div id=\'kour-io_728x90\' style="user-select: none; width: 728px; height: 90px;">\r\n                <!--\r\n                    <script type=\'text/javascript\'>\r\n                        aiptag.cmd.display.push(function () { aipDisplayTag.display(\'kour-io_728x90\'); });\r\n                    </script>\r\n                -->\r\n            </div>\r\n        </div>\r\n        <div id=\'kour-io_300x600-parent\' style="pointer-events: all; display: block; position: absolute; transform-origin: top left; top: 20%; left: 1%; z-index: 9999; width: 310px; height: 610px; padding: 5px; ">\r\n            <div id=\'kour-io_300x600\' style="user-select: none; width: 300px; height: 600px;">\r\n                <!--\r\n                    <script type=\'text/javascript\'>\r\n                        aiptag.cmd.display.push(function () { aipDisplayTag.display(\'kour-io_300x600\'); });\r\n                    </script>\r\n                -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div id="rotateMessage" class="rotate-message">\r\n        <p>Rotate to landscape mode!</p>\r\n        <img src="https://kour.io/rotate.webp" style="width: 50%;" />\r\n        <button id="usePortraitBtn">  Use Portrait Mode  </button>\r\n    </div>\r\n    <script src="rotateDevice.js"></script>\r\n    <script>\r\n        var preventUnload = function (e) {\r\n            reportMapExit();\r\n            e.preventDefault();\r\n            e.returnValue = \'\';\r\n        };\r\n        function PreventCtrlW() {\r\n            window.addEventListener(\'beforeunload\', preventUnload);\r\n        }\r\n        function AllowCtrlW() {\r\n            window.removeEventListener(\'beforeunload\', preventUnload);\r\n        }\r\n        function goDeepFullscreen() {\r\n        }\r\n        function goFullscreenMobile() {\r\n            var elem = document.documentElement;\r\n            if (elem.requestFullscreen) {\r\n                elem.requestFullscreen();\r\n            } else if (elem.mozRequestFullScreen) { // Firefox\r\n                elem.mozRequestFullScreen();\r\n            } else if (elem.webkitRequestFullscreen) { // Chrome, Safari and Opera\r\n                elem.webkitRequestFullscreen();\r\n            } else if (elem.msRequestFullscreen) { // IE/Edge\r\n                elem.msRequestFullscreen();\r\n            }\r\n            if (screen.orientation && screen.orientation.lock) {\r\n                screen.orientation.lock(\'landscape\').catch(function () {\r\n                    // Ignore errors for unsupported browsers\r\n                });\r\n            }\r\n            window.addEventListener(\'resize\', function () {\r\n            });\r\n            setTimeout(function () {\r\n                window.scrollTo(0, 1);\r\n            }, 100);\r\n        }\r\n        function copyCurrentURL() {\r\n            let currentUrl = window.location.href;\r\n            const el = document.createElement(\'textarea\');\r\n            el.value = currentUrl;\r\n            document.body.appendChild(el);\r\n            el.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(el);\r\n        }\r\n        function copyString(x) {\r\n            const el = document.createElement(\'textarea\');\r\n            el.value = x;\r\n            document.body.appendChild(el);\r\n            el.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(el);\r\n        }\r\n        function SetCursor(x) {\r\n            console.log("SetCursor - " + x);\r\n            document.getElementById("mainhtml").style.cursor = x;\r\n        }\r\n        function reload() {\r\n            location.reload();\r\n        }\r\n        function setCursor(cursorStyle) {\r\n            var canvas = document.getElementById(\'unity-canvas\');\r\n            canvas.style.cursor = cursorStyle;\r\n        }\r\n    </script>\r\n    <div id="unity-container" style="position: absolute; width: 100%; height: 100%">\r\n        <canvas id="unity-canvas" width=1920 height=1080 style="width: 100%; height: 100%; user-select: none; -webkit-user-select: none;"></canvas>\r\n    </div>\r\n    <div id="loading-cover" style="display: block; background-image: url(\'https://kour.io/TemplateData/background.webp\') ">\r\n        <div id="loading-cover-2"></div>\r\n        <img class="kourTitle" src="https://kour.io/kour-title.webp">\r\n        <p id="loadingTxt">Loading Kour Essentials...</p>\r\n        <p id="loadingTxtMinimal"></p>\r\n        <div id="unity-loading-bar" style="user-select: none;">\r\n            <div id="unity-progress-bar-empty" style="display: none; margin-top: 0px;">\r\n                <div id="unity-progress-bar-full"></div>\r\n            </div>\r\n            <div class="spinner"></div>\r\n        </div>\r\n        <div id="unity-loading-bar-fast" style="user-select: none; display: none; margin-top: 0px;">\r\n            <span class="fast-loader"></span>\r\n        </div>\r\n        <img id="refreshImage" src="https://kour.io/refresh1.webp" alt="Please wait for the game to load.">\r\n        <script>\r\n            document.addEventListener("DOMContentLoaded", function () {\r\n                onWindowResize();\r\n                const isiOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\r\n                if (isiOS) {\r\n                    document.querySelector(\'meta[name="theme-color"]\').setAttribute("content", "#1f1f1f");\r\n                }\r\n                setTimeout(function () {\r\n                    var loadingCover2 = document.getElementById(\'loading-cover-2\');\r\n                    if (loadingCover2) {\r\n                        loadingCover2.style.opacity = 1;\r\n                    }\r\n                    setTimeout(function () {\r\n                        if (loadingCover2) {\r\n                            loadingCover2.style.opacity = 0;\r\n                        }\r\n                    }, 17500);\r\n                }, 15000);\r\n                setTimeout(function () {\r\n                    var refreshImg = document.getElementById(\'refreshImage\');\r\n                    if (refreshImg !== null) {\r\n                        refreshImg.style.animation = \'slideUp 1.0s forwards\';\r\n                        refreshImg.addEventListener("mousedown", function (event) {\r\n                            event.preventDefault();\r\n                            showLoadingInfoMessage();\r\n                        });\r\n                        refreshImg.addEventListener("touchstart", function (event) {\r\n                            event.preventDefault();\r\n                            showLoadingInfoMessage();\r\n                        });\r\n                        function showLoadingInfoMessage() {\r\n                            showRetryPopup("Loading is ALMOST done. Kour.io is a first person shooter, so if you like shooting gunsâ\x80¦ wait a little bit more!<br>Click to close", false, false);\r\n                        }\r\n                        setTimeout(function () {\r\n                            refreshImg.style.animation = \'slideDown 1.0s forwards\';\r\n                            setTimeout(function () {\r\n                                refreshImg.src = \'https://kour.io/refresh2.webp\';\r\n                                setTimeout(function () {\r\n                                    refreshImg.src = \'https://kour.io/refresh2.webp\';\r\n                                    refreshImg.style.animation = \'slideUp 1.0s forwards\';\r\n                                }, 4000);\r\n                            }, 1000);\r\n\r\n                        }, 17500);\r\n                    }\r\n                }, 10000);\r\n            });\r\n        </script>\r\n    </div>\r\n    <script>\r\n        var finishedDownloadingDataFile = false;\r\n        var finishedDownloadingBoth = false;\r\n        if ("serviceWorker" in navigator) {\r\n            navigator.serviceWorker.getRegistrations().then(function (registrations) {\r\n                return Promise.all(registrations.map(function (registration) {\r\n                    return registration.unregister();\r\n                }));\r\n            }).then(function () {\r\n                return navigator.serviceWorker.register(\'ServiceWorker.js\');\r\n            }).then(function (registration) {\r\n                const knownFinalSizeInBytes = 56_396_206;\r\n                const fakeMulti = 0.3;\r\n                navigator.serviceWorker.addEventListener(\'message\', function (event) {\r\n                    const message = event.data;\r\n                    if (message.type === \'DOWNLOAD_PROGRESS\') {\r\n                        let receivedLength = message.receivedLength;\r\n                        if (receivedLength == -1 && !finishedDownloadingBoth) {\r\n                            finishedDownloadingBoth = true;\r\n                            document.querySelector("#loadingTxt").innerHTML = `Done!`;\r\n                            document.querySelector("#loadingTxtMinimal").innerHTML = `Decompressing...`;\r\n                            var loadingTextInterval;\r\n                            var loadingFakeTxts = [\r\n                                "Downloading Models",\r\n                                "Downloading Menu",\r\n                                "Downloading Maps",\r\n                                "Downloading Buttons",\r\n                                "Downloading 3D Objects",\r\n                                "Downloading Characters",\r\n                                "Downloading Animations",\r\n                                "Downloading Graphics",\r\n                                "Downloading Gradients",\r\n                                "Downloading Shop",\r\n                                "Downloading Servers",\r\n                                "Downloading Lobbies",\r\n                                "Downloading Shaders",\r\n                                "Downloading Game Modes",\r\n                                "Downloading Enemy Profiles",\r\n                                "Downloading Weapon Upgrades",\r\n                                "Downloading Armor Enhancements",\r\n                                "Downloading Soundtracks",\r\n                                "Downloading Voice Packs",\r\n                                "Downloading Multiplayer Modes",\r\n                                "Downloading Special Effects",\r\n                                "Downloading Achievements",\r\n                                "Downloading Replay Data",\r\n                                "Downloading Leaderboard Information",\r\n                                "Downloading Custom Skins",\r\n                                "Downloading Environmental Details"\r\n                            ];\r\n\r\n                            function updateLoadingText() {\r\n                                var randomTip = loadingFakeTxts[Math.floor(Math.random() * loadingFakeTxts.length)];\r\n                                loadingTxt.innerHTML = randomTip;\r\n                                var rnd = Math.random() < 0.5;\r\n                                var nextTipTimeout = (rnd ? 50 : 300);\r\n                                clearTimeout(loadingTextInterval);\r\n                                loadingTextInterval = setTimeout(updateLoadingText, nextTipTimeout);\r\n                            }\r\n                            updateLoadingText();\r\n                        }\r\n                        if (finishedDownloadingBoth) {\r\n                            return;\r\n                        }\r\n                        let percent = (receivedLength / knownFinalSizeInBytes) * 100;\r\n                        percent = easeOutQuadPercentage(percent);\r\n                        percent = Math.round(percent * 10) / 10;\r\n\r\n                        let str = `${formatNumber(receivedLength * fakeMulti)} bytes of ${formatNumber(knownFinalSizeInBytes * fakeMulti)} bytes`;\r\n\r\n                        window.receivedServiceWorkerMessage = true;\r\n                        let isData = message.isData;\r\n                        if (finishedDownloadingDataFile && isData)\r\n                            return;\r\n                        document.querySelector("#loadingTxt").innerHTML = `Downloading File ${(isData ? 1 : 2)}/2: ${percent}%`;\r\n                        document.querySelector("#loadingTxtMinimal").innerHTML = `${str}`;\r\n                        if (!isData)\r\n                            finishedDownloadingDataFile = true;\r\n                    }\r\n                });\r\n            }).catch(function (err) {\r\n                console.log(\'Service Worker registration failed: \', err);\r\n            });\r\n        } else {\r\n            console.error("cannot add worker.");\r\n        }\r\n        function easeOutQuadPercentage(percent) {\r\n            var t = percent / 100;\r\n            return (1 - (1 - t) * (1 - t)) * 100.0;\r\n        }\r\n        function formatNumber(number) {\r\n            if (number < 1000) {\r\n                return number.toString(); // Return the original number if less than 1000\r\n            } else if (number < 1000000) {\r\n                return (number / 1000).toFixed(2) + \'k\'; // Convert to \'k\' format for thousands\r\n            } else {\r\n                return (number / 1000000).toFixed(2) + \'M\'; // Convert to \'M\' format for millions\r\n            }\r\n        }\r\n        function onWindowResize() {\r\n            var newScale = Math.min(window.innerWidth / 1920.0, window.innerHeight / 960.0);\r\n            var ad1 = document.getElementById("kour-io_300x250-parent");\r\n            var ad2 = document.getElementById("kour-io_728x90-parent");\r\n            var ad3 = document.getElementById("kour-io_300x600-parent");\r\n            if (ad1) ad1.style.transform = "scale(" + newScale + ")";\r\n            if (ad2) ad2.style.transform = "scale(" + newScale + ")";\r\n            if (ad3) ad3.style.transform = "scale(" + newScale + ")";\r\n        };\r\n        onWindowResize();\r\n        window.onresize = onWindowResize;\r\n        window.onload = onWindowResize;\r\n        function SetAds(presetName72890, presetName300600, presetName300250) {\r\n            var ad1 = document.getElementById("kour-io_728x90-parent");\r\n            var ad2 = document.getElementById("kour-io_300x600-parent");\r\n            var ad3 = document.getElementById("kour-io_300x250-parent");\r\n            if (ad1) {\r\n                if (presetName72890 === "hidden") {\r\n                    ad1.style.display = "none";\r\n                }\r\n                else if (presetName72890 === "bottom") {\r\n                    ad1.style.display = "block";\r\n                }\r\n            }\r\n            if (ad2) {\r\n                if (presetName300600 === "hidden") {\r\n                    ad2.style.display = "none";\r\n                } else if (presetName300600 === "left") {\r\n                    ad2.style.transformOrigin = "top left";\r\n                    ad2.style.top = "20%";\r\n                    ad2.style.left = "1%";\r\n                    ad2.style.removeProperty(\'right\');\r\n                    ad2.style.display = "block";\r\n                } else if (presetName300600 === "right") {\r\n                    ad2.style.transformOrigin = "top right";\r\n                    ad2.style.top = "20%";\r\n                    ad2.style.right = "1%";\r\n                    ad2.style.removeProperty(\'left\');\r\n                    ad2.style.display = "block";\r\n                }\r\n            }\r\n            if (ad3) {\r\n                if (presetName300250 === "hidden") {\r\n                    ad3.style.display = "none";\r\n                } else if (presetName300250 === "left") {\r\n                    ad3.style.transformOrigin = "top left";\r\n                    ad3.style.top = "33%";\r\n                    ad3.style.left = "6%";\r\n                    ad3.style.removeProperty(\'right\');\r\n                    ad3.style.display = "block";\r\n                } else if (presetName300250 === "right") {\r\n                    ad3.style.transformOrigin = "top right";\r\n                    ad3.style.top = "20%";\r\n                    ad3.style.right = "1%";\r\n                    ad3.style.removeProperty(\'left\');\r\n                    ad3.style.display = "block";\r\n                } else if (presetName300250 === "topleft") {\r\n                    ad3.style.transformOrigin = "top left";\r\n                    ad3.style.top = "10%";\r\n                    ad3.style.left = "1%";\r\n                    ad3.style.removeProperty(\'right\');\r\n                    ad3.style.display = "block";\r\n                }\r\n            }\r\n        }\r\n    </script>\r\n    <style>\r\n        #words {\r\n            font-family: \'Fjalla One\', sans-serif;\r\n            text-align: left;\r\n            justify-content: left;\r\n            user-select: none;\r\n            font-size: 37px;\r\n        }\r\n\r\n        #unity-logo {\r\n            max-width: 300px;\r\n        }\r\n\r\n        @media (max-width: 1200px) {\r\n            #words {\r\n                font-size: 30px;\r\n            }\r\n\r\n            #unity-logo {\r\n                max-width: 250px;\r\n            }\r\n        }\r\n\r\n        @media (max-width: 992px) {\r\n            #words {\r\n                font-size: 25px;\r\n            }\r\n\r\n            #unity-logo {\r\n                max-width: 200px;\r\n            }\r\n        }\r\n\r\n        @media (max-width: 768px) {\r\n            #words {\r\n                font-size: 20px;\r\n            }\r\n\r\n            #unity-logo {\r\n                max-width: 150px;\r\n            }\r\n        }\r\n\r\n        @media (max-width: 576px) {\r\n            #words {\r\n                font-size: 15px;\r\n            }\r\n\r\n            #unity-logo {\r\n                max-width: 100px;\r\n            }\r\n        }\r\n    </style>\r\n    <script>\r\n\r\n            function isVirtualControls() {\r\n                var userAgent = navigator.userAgent.toLowerCase();\r\n\r\n                if (/windows nt/.test(userAgent) && !/windows phone/.test(userAgent)) {\r\n                    return false;\r\n                }\r\n\r\n                if (/CrOS/.test(userAgent)) {\r\n                    return false;\r\n                }\r\n\r\n                if (/mobile/.test(userAgent)) {\r\n                    return true;\r\n                }\r\n\r\n                var isIPad = /ipad|macintosh/.test(userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 1;\r\n                var isAndroidTablet = /android/.test(userAgent) && !/mobile/.test(userAgent);\r\n                if (isIPad || isAndroidTablet) {\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            window.receivedServiceWorkerMessage = false;\r\n            function preventZoomDuringLoading(event) {\r\n                if (window.gameLoading) {\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n            document.addEventListener(\'touchstart\', preventZoomDuringLoading, { passive: false });\r\n            document.addEventListener(\'touchmove\', preventZoomDuringLoading, { passive: false });\r\n            function playerPrefsSetFloat(key, value) {\r\n                localStorage.setItem(key, value.toString());\r\n            }\r\n            function playerPrefsGetFloat(key, defaultValue = 0.9) {\r\n                const storedValue = localStorage.getItem(key);\r\n                const parsedValue = storedValue ? parseFloat(storedValue) : defaultValue;\r\n                return parsedValue;\r\n            }\r\n          var container = document.querySelector("#unity-container");\r\n          var canvas = document.querySelector("#unity-canvas");\r\n          const loadingCover = document.querySelector("#loading-cover");\r\n          const fastLoadingAnim = document.querySelector("#unity-loading-bar-fast");\r\n          const progressBarEmpty = document.querySelector("#unity-progress-bar-empty");\r\n          const loadingTxt = document.querySelector("#loadingTxt");\r\n          var progressBarFull = document.querySelector("#unity-progress-bar-full");\r\n          const spinner = document.querySelector(\'.spinner\');\r\n          var isMobile = isVirtualControls();\r\n\r\n          function loadAdBannerScript(tagad) {\r\n            aiptag.cmd.display.push(function () { aipDisplayTag.display(`${tagad}`); });\r\n          }\r\n          if (isMobile){\r\n            //loadAdBannerScript(\'kour-io_728x90\');\r\n            //loadAdBannerScript(\'kour-io_300x250\');\r\n            //loadAdBannerScript(\'kour-io_300x600\');\r\n          }\r\n          else{\r\n            loadAdBannerScript(\'kour-io_728x90\');\r\n            loadAdBannerScript(\'kour-io_300x250\');\r\n            loadAdBannerScript(\'kour-io_300x600\');\r\n          }\r\n\r\n          var buildUrl = isMobile ? "mobile/Build" : "Build";\r\n          var loaderUrl = buildUrl + "/KourWeb.loader2.js";\r\n          var config = {\r\n              dataUrl: buildUrl + "/d0f055255ca2fb65da1cbff94963ad53.data.br",\r\n              frameworkUrl: buildUrl + "/523c0e683adfc817c0f8750f4509b391.js.br",\r\n              codeUrl: buildUrl + "/d34a2e2ad6ab8dac9752b9a6b530f49e.wasm.br",\r\n            streamingAssetsUrl: "StreamingAssets",\r\n            companyName: "LEGiONPlatforms",\r\n            productName: "Kour.io",\r\n            productVersion: "2.41",\r\n            devicePixelRatio: playerPrefsGetFloat("renderScale", 0.9)\r\n          };\r\n          if (isMobile) {\r\n            var meta = document.createElement(\'meta\');\r\n            meta.name = \'viewport\';\r\n            meta.content = \'width=device-width, height=device-height, initial-scale=1.0, user-scalable=no, shrink-to-fit=yes\';\r\n            document.getElementsByTagName(\'head\')[0].appendChild(meta);\r\n            config.devicePixelRatio = playerPrefsGetFloat("renderScale", 0.9) * 1.00;\r\n          }\r\n            var tips = [\r\n                "Downloading Models",\r\n                "Installing Menu",\r\n                "Downloading Maps",\r\n                "Downloading Buttons",\r\n                "Installing 3D Objects",\r\n                "Downloading Characters",\r\n                "Installing Animations",\r\n                "Downloading Graphics",\r\n                "Downloading Gradients",\r\n                "Installing Shop",\r\n                "Installing Servers",\r\n                "Downloading Lobbies",\r\n                "Installing Shaders",\r\n                "Downloading Game Modes",\r\n                "Downloading Enemy Profiles",\r\n                "Installing Weapon Upgrades",\r\n                "Downloading Armor Enhancements",\r\n                "Installing Soundtracks",\r\n                "Downloading Voice Packs",\r\n                "Downloading Multiplayer Modes",\r\n                "Installing Special Effects",\r\n                "Downloading Achievements",\r\n                "Downloading Replay Data",\r\n                "Downloading Leaderboard Information",\r\n                "Installing Custom Skins",\r\n                "Installing Environmental Details"\r\n            ];\r\n            function updateLoadingTextWithTip() {\r\n                var randomTip = tips[Math.floor(Math.random() * tips.length)];\r\n                if (!window.receivedServiceWorkerMessage)\r\n                    loadingTxt.innerHTML = randomTip;\r\n                var longerDuration = Math.random() < 0.2;\r\n                var rnd2 = Math.random() < 0.5;\r\n                var nextTipTimeout = longerDuration ? 1000 : (rnd2 ? 250 : 500);\r\n                clearTimeout(tipInterval);\r\n                tipInterval = setTimeout(updateLoadingTextWithTip, nextTipTimeout);\r\n            }\r\n            function easeOutQuadPercentage(percent) {\r\n                var t = percent / 100;\r\n                return (1 - (1 - t) * (1 - t)) * 100.0;\r\n            }\r\n            var tipInterval;\r\n          loadingCover.style.display = "";\r\n          const _script = document.createElement("script");\r\n          _script.src = loaderUrl;\r\n          window.gameLoading = true; // Set to true during loading, and update accordingly in your code\r\n          reportLoadingStart();\r\n          var reachedLastLoadingStep = false;\r\n          _script.onload = () => {\r\n              createUnityInstance(canvas, config, (progress) => {\r\n                  spinner.style.display = "none";\r\n                  x = Math.floor(easeOutQuadPercentage(Math.max(4, Math.min(100, 100 * progress * 1.175))));\r\n                  if (x >= 98) {\r\n                      fastLoadingAnim.style.display = "flex";\r\n                      progressBarEmpty.style.display = "none";\r\n                      progressBarFull.style.display = "none";\r\n                      if (!reachedLastLoadingStep) {\r\n                          reachedLastLoadingStep = true;\r\n                          if (!window.receivedServiceWorkerMessage)\r\n                            loadingTxt.innerHTML = `Almost there...`;\r\n                          clearInterval(tipInterval);\r\n                          updateLoadingTextWithTip();\r\n                          tipInterval = setTimeout(updateLoadingTextWithTip, 500);\r\n                      }\r\n                  }\r\n                  else {\r\n                      fastLoadingAnim.style.display = "none";\r\n                      progressBarEmpty.style.display = "";\r\n                      progressBarFull.style.width = `${x}%`;\r\n                      if (!window.receivedServiceWorkerMessage)\r\n                        loadingTxt.innerHTML = `${x}%`;\r\n                  }\r\n              }).then((unityInstance) => {\r\n                  clearInterval(tipInterval);\r\n                  window.unityInstance = unityInstance;\r\n                  setTimeout(function () {\r\n                      var animDuration = 200;\r\n                      loadingCover.animate([\r\n                          { opacity: \'1\' },\r\n                          { opacity: \'0\' }\r\n                      ], {\r\n                          duration: animDuration,\r\n                          fill: \'forwards\'\r\n                      });\r\n                      loadingCover.animate([\r\n                          { transform: \'scale(1)\', opacity: \'1\' },\r\n                          { transform: \'scale(2)\', opacity: \'0\' }\r\n                      ], {\r\n                          duration: animDuration,\r\n                          fill: \'forwards\'\r\n                      });\r\n                      setTimeout(function () {\r\n                          if (loadingCover) {\r\n                              loadingCover.remove();\r\n                          }\r\n                      }, animDuration);\r\n                  }, 100);\r\n                  window.gameLoading = false;\r\n                  reportLoadingFinished();\r\n                  console.log(\'%cWARNING: Do not paste any scripts into this console. Pasting script/code can compromise your device and may lead to a ban.\', \'color: red; font-weight: bold;\');\r\n              }).catch((error) => {\r\n                  let errorMessage = (error.message ? error.message : error.toString()).toLowerCase();\r\n                  customOnError(errorMessage);\r\n              });\r\n            };\r\n            (function () {\r\n                const originalConsoleError = console.error;\r\n                console.error = function (...args) {\r\n                    const errorMessage = args.join(\' \');\r\n                    if (errorMessage.includes("extra work")) {\r\n                        return;\r\n                    }\r\n                    customOnError(errorMessage);\r\n                    originalConsoleError.apply(console, args);\r\n                };\r\n            })();\r\n            function customOnError(message) {\r\n                var isFileDownloadError = message.toLowerCase().includes(\'failed to download file\') && (message.includes(\'.data\') || message.includes(\'.wasm\') || message.includes(\'.br\'));\r\n                var isWasmError = message.toLowerCase().includes(\'both async and sync fetching of the wasm failed\');\r\n                var isUnableToLoadFileError = message.toLowerCase().includes("unable to load file") && (message.includes(\'.js\') || message.includes(\'.br\') || message.includes(\'.framework\'));\r\n                if (isFileDownloadError || isWasmError) {\r\n                    showRetryPopup("Failed Downloading Game Files. <br>Click to try again.", true, true);\r\n                    gtag(\'event\', "downloadGameFilesFailedErrorCatched", {\r\n                        \'event_category\': \'error\',\r\n                        \'event_label\': message\r\n                    });\r\n                }\r\n                else if (isUnableToLoadFileError) {\r\n                    showRetryPopup("Failed Downloading Game Files. <br>Click to try again.", true, false);\r\n                    gtag(\'event\', "downloadGameFilesFailedErrorCatched", {\r\n                        \'event_category\': \'error\',\r\n                        \'event_label\': message\r\n                    });\r\n                }\r\n            }\r\n            window.addEventListener(\'offline\', function () {\r\n                if (window.gameLoading)\r\n                    showRetryPopup("You are Offline. Please Connect to the internet. <br>Click to try again", true, false);\r\n            });\r\n            var totalRetryTimes = 0;\r\n            const retryUnityLoad = () => {\r\n                console.log("Retrying to load the unity instance (retryUnityLoad)");\r\n                if (!navigator.onLine) {\r\n                    console.log("You are not online! Abort retryUnityLoad.");\r\n                    return;\r\n                }\r\n                var popup = document.getElementById(\'unityRetryPopup\');\r\n                if (popup != null)\r\n                    document.body.removeChild(popup);\r\n                if (window.unityInstance)\r\n                {\r\n                    console.log("unityInstance exists! Abort retryUnityLoad.");\r\n                    return;\r\n                }\r\n                removeScriptBySrc(loaderUrl);\r\n                //var refreshBtn = document.getElementById(\'refreshBtn\');\r\n                //refreshBtn.style.display = "none";\r\n                //setTimeout(function () {\r\n                //    refreshBtn.style.display = "flex";\r\n                //}, 25000);\r\n                const _newScript = document.createElement("script");\r\n                _newScript.src = loaderUrl;\r\n                window.gameLoading = true;\r\n                reportLoadingStart();\r\n                var reachedLastLoadingStep = false;\r\n                _newScript.onload = () => {\r\n                    createUnityInstance(canvas, config, (progress) => {\r\n                        spinner.style.display = "none";\r\n                        x = Math.floor(easeOutQuadPercentage(Math.max(4, Math.min(100, 100 * progress * 1.175))));\r\n                        if (x >= 98) {\r\n                            fastLoadingAnim.style.display = "flex";\r\n                            progressBarEmpty.style.display = "none";\r\n                            progressBarFull.style.display = "none";\r\n                            if (!reachedLastLoadingStep) {\r\n                                reachedLastLoadingStep = true;\r\n                                if (!window.receivedServiceWorkerMessage)\r\n                                    loadingTxt.innerHTML = `Almost there...`;\r\n                                clearInterval(tipInterval);\r\n                                updateLoadingTextWithTip();\r\n                                tipInterval = setTimeout(updateLoadingTextWithTip, 500);\r\n                            }\r\n                        }\r\n                        else {\r\n                            fastLoadingAnim.style.display = "none";\r\n                            progressBarEmpty.style.display = "";\r\n                            progressBarFull.style.width = `${x}%`;\r\n                            if (!window.receivedServiceWorkerMessage)\r\n                                loadingTxt.innerHTML = `${x}%`;\r\n                        }\r\n                    }).then((unityInstance) => {\r\n                        clearInterval(tipInterval);\r\n                        window.unityInstance = unityInstance;\r\n                        setTimeout(function () {\r\n                            var animDuration = 200;\r\n                            loadingCover.animate([\r\n                                { opacity: \'1\' },\r\n                                { opacity: \'0\' }\r\n                            ], {\r\n                                duration: animDuration,\r\n                                fill: \'forwards\'\r\n                            });\r\n                            loadingCover.animate([\r\n                                { transform: \'scale(1)\', opacity: \'1\' },\r\n                                { transform: \'scale(2)\', opacity: \'0\' }\r\n                            ], {\r\n                                duration: animDuration,\r\n                                fill: \'forwards\'\r\n                            });\r\n                            setTimeout(function () {\r\n                                if (loadingCover) {\r\n                                    loadingCover.remove();\r\n                                }\r\n                            }, animDuration);\r\n                        }, 100);\r\n                        window.gameLoading = false;\r\n                        reportLoadingFinished();\r\n                        console.log(\'%cWARNING: Do not paste any scripts into this console. Pasting script/code can compromise your device and may lead to a ban.\', \'color: red; font-weight: bold;\');\r\n                    }).catch((error) => {\r\n                        let errorMessage = (error.message ? error.message : error.toString()).toLowerCase();\r\n                        customOnError(errorMessage);\r\n                    });\r\n                };\r\n                document.body.appendChild(_newScript);\r\n            };\r\n            function showRetryPopup(message, retry, retryRn) {\r\n                if (!window.gameLoading)\r\n                    return;\r\n                if (window.unityInstance)\r\n                    return;\r\n                if (retryRn && totalRetryTimes <= 10) {\r\n                    retryUnityLoad();\r\n                    return;\r\n                }\r\n                var existingPopup = document.getElementById(\'unityRetryPopup\');\r\n                if (existingPopup) {\r\n                    existingPopup.querySelector(\'.popup-content\').innerHTML = message;\r\n                    return;\r\n                }\r\n                var popup = document.createElement("div");\r\n                popup.id = \'unityRetryPopup\';\r\n                popup.style.position = "fixed";\r\n                popup.style.left = "0";\r\n                popup.style.top = "0";\r\n                popup.style.width = "100%";\r\n                popup.style.height = "100%";\r\n                popup.style.backgroundColor = "rgba(0, 0, 0, 0.9)";\r\n                popup.style.display = "flex";\r\n                popup.style.alignItems = "center";\r\n                popup.style.justifyContent = "center";\r\n                popup.style.userSelect = "none";\r\n                popup.style.zIndex = "1000";\r\n                var content = document.createElement("div");\r\n                content.style.padding = "20px";\r\n                content.style.backgroundColor = "#333"; // Dark background for the content\r\n                content.style.color = "#fff"; // White text color\r\n                content.style.borderRadius = "15px"; // Rounded corners\r\n                content.style.textAlign = "center";\r\n                content.style.maxWidth = "80%";\r\n                content.style.fontSize = "18px";\r\n                content.innerHTML = message;\r\n                content.style.fontFamily = "\'Segoe UI\', Tahoma, Geneva, Verdana, sans-serif";\r\n                content.style.boxShadow = "0 10px 10px rgba(0, 0, 0, 0.2)";\r\n                content.style.cursor = "pointer"; // Change cursor on hover\r\n                content.style.userSelect = "none";\r\n                popup.appendChild(content);\r\n                document.body.appendChild(popup);\r\n                if (retry) {\r\n                    popup.addEventListener("click", retryUnityLoad);\r\n                    popup.addEventListener("touchstart", retryUnityLoad, { passive: true });\r\n                }\r\n                else {\r\n                    popup.addEventListener("click", () => {\r\n                        document.body.removeChild(popup);\r\n                    });\r\n                    popup.addEventListener("touchstart", () => {\r\n                        document.body.removeChild(popup);\r\n                    }, { passive: true });\r\n                }\r\n            }\r\n            document.body.appendChild(_script);\r\n            function removeScriptBySrc(src) {\r\n                let scripts = document.getElementsByTagName(\'script\');\r\n                for (let i = 0; i < scripts.length; i++) {\r\n                    if (scripts[i].src === src) {\r\n                        scripts[i].parentNode.removeChild(scripts[i]);\r\n                    }\r\n                }\r\n            }\r\n    </script>\r\n    <script src="https://www.gstatic.com/firebasejs/10.8.0/firebase-app-compat.js" defer></script>\r\n    <script src="https://www.gstatic.com/firebasejs/10.8.0/firebase-auth-compat.js" defer></script>\r\n    <script src="https://www.gstatic.com/firebasejs/10.8.0/firebase-database-compat.js" defer></script>\r\n    <script src="https://www.gstatic.com/firebasejs/10.8.0/firebase-functions-compat.js" defer></script>\r\n    <script src="https://kour.io/firebase-compact.js" defer></script>\r\n    <script>\r\n        function testDevice() {\r\n            try {\r\n                navigator.getBattery().then(function (battery) {\r\n                    if (battery.charging && battery.chargingTime === 0) {\r\n                        unityInstance.SendMessage(\'MainManager\', \'OnGotDevice\', "Desktop");\r\n                    } else {\r\n                        unityInstance.SendMessage(\'MainManager\', \'OnGotDevice\', "Laptop");\r\n                    }\r\n                }).catch(function (error) {\r\n                    unityInstance.SendMessage(\'MainManager\', \'OnGotDevice\', "Unknown");\r\n                });\r\n            } catch (error) {\r\n                unityInstance.SendMessage(\'MainManager\', \'OnGotDevice\', "Unknown");\r\n            }\r\n        }\r\n        function SetPaypalPaymentWindow(x) {\r\n            document.getElementById(\'paypalPaymentWindow\').style.display = x;\r\n        }\r\n        function CancelPaypalProcess() {\r\n            document.getElementById(\'paypalPaymentWindow\').style.display = "none";\r\n            unityInstance.SendMessage(\'Payments\', \'OnPayPalPurchaseFinished\', "0");\r\n        }\r\n        function Purchase(amount) {\r\n            window.currentPaymentPrice = amount;\r\n            document.getElementById(\'paypalPaymentWindow\').style.display = \'block\';\r\n        }\r\n        function SetURL(add) {\r\n            var currentURL = window.location.protocol + "//" + window.location.host + window.location.pathname + add;\r\n            window.history.pushState({ path: currentURL }, \'\', currentURL);\r\n        }\r\n        function copyCurrentURL() {\r\n            var u = window.location.href;\r\n            setClipboard(u);\r\n        }\r\n\r\n        function LockCursor() {\r\n            canvas.requestPointerLock = canvas.requestPointerLock ||\r\n                canvas.mozRequestPointerLock ||\r\n                canvas.webkitRequestPointerLock;\r\n            const promise = canvas.requestPointerLock({\r\n                unadjustedMovement: true\r\n            });\r\n            if (!promise) {\r\n                console.error("Disabling mouse acceleration is not supported by this browser.");\r\n                canvas.requestPointerLock();\r\n                return;\r\n            }\r\n            promise.catch((error) => {\r\n                if (error.name === "NotSupportedError") {\r\n                    console.error("Unadjusted movement not supported by this platform, attempting to lock pointer without it.");\r\n                    canvas.requestPointerLock();\r\n                } else {\r\n                    console.error("Failed to lock pointer:", error);\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        document.addEventListener(\'pointerlockchange\', lockChangeAlert, false);\r\n        document.addEventListener(\'mozpointerlockchange\', lockChangeAlert, false);\r\n        function lockChangeAlert() {\r\n            if (document.pointerLockElement === canvas || document.mozPointerLockElement === canvas) {\r\n\r\n            }\r\n            else {\r\n                unityInstance.SendMessage(\'MainManager\', \'OnEscapeJS\');\r\n            }\r\n        }\r\n        function toggleFullscreen() {\r\n            if (document.fullscreenElement === null) {\r\n                openFullscreen();\r\n                return;\r\n            }\r\n            exitFullscreen();\r\n        }\r\n        function openFullscreen() {\r\n            document.documentElement.requestFullscreen();\r\n        }\r\n        function exitFullscreen() {\r\n            document.exitFullscreen();\r\n        }\r\n        function setClipboard(stringToSetAsClipboard) {\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.style.position = \'fixed\';\r\n            tempInput.style.opacity = \'0\';\r\n            tempInput.value = stringToSetAsClipboard;\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n        }\r\n        function getClipboard() {\r\n            navigator.clipboard.readText()\r\n                .then((clipboardContent) => {\r\n                    unityInstance.SendMessage(\'MainManager\', \'OnGotClipboard\', clipboardContent);\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\'Clipboard access error:\', error);\r\n                });\r\n        }\r\n    </script>\r\n<script>(function(){if (!document.body) return;var js = "window[\'__CF$cv$params\']={r:\'8728d6060c4ba7ef\',t:\'MTcxMjgxNjA2My41NzQwMDA=\'};_cpo=document.createElement(\'script\');_cpo.nonce=\'\',_cpo.src=\'/cdn-cgi/challenge-platform/scripts/jsd/main.js\',document.getElementsByTagName(\'head\')[0].appendChild(_cpo);";var _0xh = document.createElement(\'iframe\');_0xh.height = 1;_0xh.width = 1;_0xh.style.position = \'absolute\';_0xh.style.top = 0;_0xh.style.left = 0;_0xh.style.border = \'none\';_0xh.style.visibility = \'hidden\';document.body.appendChild(_0xh);function handler() {var _0xi = _0xh.contentDocument || _0xh.contentWindow.document;if (_0xi) {var _0xj = _0xi.createElement(\'script\');_0xj.innerHTML = js;_0xi.getElementsByTagName(\'head\')[0].appendChild(_0xj);}}if (document.readyState !== \'loading\') {handler();} else if (window.addEventListener) {document.addEventListener(\'DOMContentLoaded\', handler);} else {var prev = document.onreadystatechange || function () {};document.onreadystatechange = function (e) {prev(e);if (document.readyState !== \'loading\') {document.onreadystatechange = prev;handler();}};}})();</script></body>\r\n    </html>\r\n'